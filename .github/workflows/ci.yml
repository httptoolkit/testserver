name: CI
on: [push, pull_request]
jobs:
  build:
    name: Build & test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm ci
      - run: npm run build
      - run: npm test

  deploy:
    name: Deploy to production
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: production
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Scaleway Container Registry
        uses: docker/login-action@v3
        with:
          registry: rg.nl-ams.scw.cloud/httptoolkit
          username: nologin
          password: ${{ secrets.SCW_REGISTRY_KEY }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: |
            httptoolkit/testserver
            ghcr.io/httptoolkit/testserver
            rg.nl-ams.scw.cloud/httptoolkit/testserver
          tags: |
              type=raw,value=prod,enable={{is_default_branch}}
              type=raw,value=latest,enable={{is_default_branch}}
              type=sha

      - name: Build & publish image to registries
        uses: docker/build-push-action@v4
        with:
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: VERSION=${{ github.sha }}